// main.cpp
// Runs on TM4C123
// Jonathan Valvano and Daniel Valvano
// This is a starter project for the EE319K Lab 10 in C++

// Last Modified: 1/16/2021 
// http://www.spaceinvaders.de/
// sounds at http://www.classicgaming.cc/classics/spaceinvaders/sounds.php
// http://www.classicgaming.cc/classics/spaceinvaders/playguide.php
/* 
 Copyright 2021 by Jonathan W. Valvano, valvano@mail.utexas.edu
    You may use, edit, run or distribute this file
    as long as the above copyright notice remains
 THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
 OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 For more information about my classes, my research, and my books, see
 http://users.ece.utexas.edu/~valvano/
 */
// ******* Possible Hardware I/O connections*******************
// Slide pot pin 1 connected to ground
// Slide pot pin 2 connected to PD2/AIN5
// Slide pot pin 3 connected to +3.3V 
// fire button connected to PE0
// special weapon fire button connected to PE1
// 47k  resistor DAC bit 0 on PB0 (least significant bit)
// 24k  resistor DAC bit 1 on PB1
// 12k  resistor DAC bit 2 on PB2
// 6k   resistor DAC bit 3 on PB3 
// 3k   resistor DAC bit 4 on PB4 
// 1.5k resistor DAC bit 5 on PB5 (most significant bit)

// VCC   3.3V power to OLED
// GND   ground
// SCL   PD0 I2C clock (add 1.5k resistor from SCL to 3.3V)
// SDA   PD1 I2C data

//************WARNING***********
// The LaunchPad has PB7 connected to PD1, PB6 connected to PD0
// Option 1) do not use PB7 and PB6
// Option 2) remove 0-ohm resistors R9 R10 on LaunchPad
//******************************

#include <stdint.h>
#include "../inc/tm4c123gh6pm.h"
#include "TExaS.h"
#include "SSD1306.h"
#include "Random.h"
//#include "Switch.h"
#include "SlidePot.h"
#include "Images.h"
#include "Timer0.h"
#include "Timer1.h"
#include "Timer2.h"
#include "Sound.h"

#define JUMP_LEN 1696
char jump[1696] = {32,32,32,33,33,34,32,29,28,28,28,26,31,37,37,37,37,39,33,25,25,25,25,24,30,38,38,38,38,39,32,24,25,25,25,24,32,39,38,38,38,38,31,24,25,25,25,25,33,39,38,38,38,37,29,24,25,25,24,26,36,39,38,38,39,36,26,24,25,25,24,29,38,38,38,38,39,32,25,25,25,25,25,33,39,38,38,38,37,28,24,25,25,24,28,36,39,38,38,39,33,25,24,26,25,25,32,39,38,37,39,37,29,24,25,25,24,28,37,39,37,38,39,32,25,25,26,24,25,34,39,38,37,39,36,27,24,26,25,24,30,38,38,37,38,37,29,24,25,25,24,28,36,39,37,38,38,32,25,25,26,24,26,35,39,37,38,39,34,26,24,26,24,25,33,39,38,37,39,35,26,24,26,25,25,32,39,38,37,39,35,27,24,26,25,25,32,39,38,37,39,35,27,24,26,25,25,32,39,38,37,39,35,27,24,26,25,25,33,39,38,37,39,34,26,24,26,24,26,34,39,37,38,39,33,25,25,26,24,27,35,39,37,38,38,31,24,25,26,24,29,37,39,37,39,37,29,24,26,25,24,31,38,38,37,39,35,26,24,26,24,26,34,39,37,38,38,32,25,25,26,24,29,37,39,37,39,37,28,24,26,25,25,32,39,38,37,39,33,25,25,26,24,28,36,39,37,38,37,28,24,26,25,25,33,39,38,38,39,32,25,25,26,24,29,37,38,37,39,36,27,24,26,24,26,35,39,37,38,38,30,24,26,25,25,32,38,38,37,39,33,25,25,26,24,29,37,38,37,39,35,26,24,26,24,27,36,39,37,39,36,28,24,26,25,26,35,39,37,38,37,29,24,26,25,26,34,39,37,38,38,30,24,26,25,25,33,39,37,38,38,30,24,26,25,25,33,39,37,38,38,30,24,26,25,25,33,39,37,38,38,30,24,26,25,25,33,39,37,38,37,29,24,26,25,26,34,39,37,38,37,28,24,26,25,27,36,39,37,39,36,27,25,26,24,28,37,38,37,39,34,26,25,26,24,30,38,38,37,38,31,25,26,25,25,33,39,37,38,37,28,24,26,25,27,36,38,37,39,35,26,25,26,24,30,38,38,37,38,31,24,26,25,26,34,39,37,38,36,27,25,26,24,29,37,38,37,39,32,25,26,25,25,33,39,37,38,36,27,25,26,24,29,37,38,37,38,31,25,26,25,26,34,39,37,38,35,26,25,26,24,31,38,37,38,38,29,24,26,25,27,36,38,37,39,32,25,26,25,25,34,39,37,38,35,26,25,26,25,31,38,37,38,37,28,25,26,24,29,38,38,37,38,30,24,26,25,28,37,38,37,38,32,25,26,25,26,35,38,37,38,33,25,26,25,26,34,38,37,38,34,26,26,26,26,34,38,37,38,34,26,26,26,25,34,38,37,38,34,26,26,26,25,34,38,37,38,34,26,26,26,26,34,38,37,38,34,26,26,26,26,34,38,37,38,33,25,26,26,27,35,38,37,38,32,25,26,25,28,36,37,37,38,30,25,27,25,29,37,37,37,37,28,25,26,25,31,38,36,38,35,27,26,26,26,34,38,36,38,33,26,26,26,27,36,37,37,37,30,25,27,25,30,37,37,37,36,27,26,26,26,33,38,36,38,33,26,27,26,28,36,37,37,37,29,26,27,26,31,37,36,37,34,26,26,26,27,35,37,36,37,30,26,27,26,31,37,36,37,34,26,27,26,27,35,37,36,37,29,26,27,26,32,37,36,37,33,26,27,26,28,36,36,37,36,28,26,27,26,34,37,36,37,31,26,27,26,31,37,36,37,34,27,27,26,28,36,36,36,36,28,26,27,27,34,37,36,37,30,26,27,26,32,37,36,37,32,26,27,26,30,37,36,37,34,27,27,26,29,36,36,36,35,27,27,27,28,35,36,36,36,28,27,27,27,34,36,36,36,29,27,27,27,34,36,36,36,30,26,27,27,33,37,36,36,30,26,27,27,33,36,36,36,30,27,27,27,33,36,35,36,30,27,27,27,33,36,35,36,30,27,27,27,33,36,36,36,29,27,27,27,34,36,36,36,29,27,27,28,35,36,36,35,28,27,27,28,35,36,36,34,28,28,27,29,36,35,36,33,27,28,27,31,36,35,36,32,27,28,27,32,36,35,36,30,27,28,28,34,36,35,35,28,28,27,29,35,35,36,33,27,28,27,31,36,35,36,31,27,28,27,33,36,35,35,29,28,27,29,35,35,36,33,27,28,27,31,36,35,36,30,27,28,28,34,35,35,34,28,28,27,30,36,35,36,31,27,28,28,33,35,35,34,28,28,28,30,35,35,36,31,27,28,28,33,35,35,34,29,28,28,30,35,35,35,31,28,28,28,34,35,35,34,28,28,28,31,35,35,35,30,28,28,29,34,35,35,32,28,28,28,33,35,35,34,29,28,28,30,35,35,35,31,28,28,29,34,35,35,32,28,28,28,33,35,35,34,29,28,28,31,35,35,35,30,28,28,30,34,35,35,31,28,28,29,34,35,35,32,28,28,28,33,35,35,33,29,28,28,32,35,35,34,29,28,28,31,35,35,34,30,28,28,31,34,35,34,30,28,28,30,34,35,34,31,28,28,30,34,35,34,31,28,28,30,34,35,34,31,29,28,30,33,35,34,32,29,28,30,33,35,34,31,29,28,30,33,35,34,31,29,28,30,33,35,34,31,29,29,30,33,35,34,31,29,29,30,34,34,34,31,29,29,31,34,34,34,31,29,29,31,34,34,33,30,29,29,31,34,34,33,30,29,29,32,34,34,32,29,29,30,33,34,34,32,29,29,30,33,34,34,31,29,29,31,33,34,33,30,29,29,32,34,34,32,30,29,30,32,34,34,32,29,29,30,33,34,33,31,29,29,31,34,34,33,30,29,30,32,34,34,32,30,29,30,33,34,33,31,29,29,31,34,34,32,30,29,30,32,34,34,32,29,29,31,33,34,33,31,29,30,32,34,34,32,30,29,31,33,34,33,31,29,30,32,34,34,32,30,29,31,33,34,33,31,29,30,32,33,34,32,30,29,31,33,34,33,31,29,30,32,33,33,32,30,29,31,33,34,33,31,29,30,32,33,33,31,30,30,31,33,33,32,30,29,30,32,33,33,31,30,30,32,33,33,32,30,30,31,33,33,32,30,30,31,32,33,33,31,30,30,32,33,33,32,30,30,31,33,33,32,30,30,31,32,33,32,31,30,30,32,33,33,31,30,30,32,33,33,32,30,30,31,33,33,32,30,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,33,33,31,30,30,32,33,33,31,30,30,32,33,33,32,30,30,31,33,33,32,30,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,33,32,31,30,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32};
//#define OVER_LEN 11084
//const unsigned char GameOver[11084] = {27,27,27,26,30,37,36,37,35,27,27,27,27,35,37,36,37,30,26,28,26,30,37,36,37,35,27,27,27,27,35,37,36,37,30,26,28,26,30,37,36,37,35,27,27,27,27,35,37,36,37,30,26,28,26,30,37,36,37,35,27,27,27,27,35,37,36,37,30,26,28,26,30,37,36,37,35,27,27,27,27,35,37,36,37,30,26,28,26,30,37,36,37,35,27,27,27,27,35,37,36,37,30,26,28,26,30,37,36,37,35,27,27,27,27,35,37,36,37,30,26,27,26,30,37,36,31,26,27,26,28,36,36,36,37,30,26,27,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,30,26,28,26,29,36,36,36,37,31,26,28,26,28,36,36,36,37,30,26,27,27,26,29,36,37,35,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,36,36,36,37,32,26,27,27,26,32,37,35,36,36,29,26,28,26,29,36,36,35,37,32,26,27,27,26,32,37,35,36,36,29,26,28,26,29,36,36,35,37,32,26,27,27,26,32,37,35,36,36,29,26,28,26,29,36,36,35,37,32,26,27,27,26,32,37,35,36,36,29,26,28,26,29,36,36,35,37,32,26,27,27,26,32,37,35,36,36,29,26,28,26,29,36,36,35,37,32,26,27,27,26,32,37,35,36,36,29,26,28,26,29,36,36,35,37,32,26,27,27,26,32,37,36,36,36,29,26,28,26,29,35,36,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,36,36,36,31,26,27,27,27,32,37,35,36,36,31,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,26,28,26,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,27,28,27,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,27,28,27,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,27,28,27,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,27,28,27,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,27,28,27,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,27,28,27,28,34,37,35,36,36,31,26,27,27,26,31,36,36,35,37,34,28,27,28,27,28,34,37,35,36,36,31,26,27,32,36,36,35,37,34,28,27,28,27,27,32,37,36,35,37,34,28,27,28,27,27,32,37,36,35,37,34,28,27,28,27,27,32,37,36,35,37,34,28,27,28,27,27,32,37,36,35,37,34,28,27,28,27,27,32,37,36,35,37,34,28,27,28,27,27,32,37,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,37,34,28,27,28,27,27,32,36,36,35,36,34,28,27,28,27,28,26,29,35,36,36,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,27,27,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,27,27,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,27,27,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,27,27,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,27,27,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,36,35,36,35,29,27,28,28,27,29,35,36,35,36,36,32,27,27,28,27,27,32,36,35,36,36,35,29,27,28,26,33,36,35,36,35,36,30,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,28,27,32,36,35,36,35,36,31,27,28,27,27,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,27,27,27,27,27,27,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,27,27,27,27,27,27,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,27,27,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,27,27,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,27,27,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,27,27,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,27,27,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,31,36,35,36,35,36,34,28,28,28,28,28,28,34,36,35,36,35,36,31,27,28,27,28,27,30,36,35,36,36,35,36,31,27,28,27,28,27,29,35,36,35,36,35,36,31,27,28,27,28,27,29,35,36,35,36,35,36,31,27,28,27,28,27,29,35,36,35,36,35,36,31,27,28,27,28,27,29,35,36,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,31,27,28,27,28,27,29,35,35,35,35,35,36,31,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,36,35,29,27,28,27,28,27,29,35,36,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,36,35,35,35,29,27,28,27,28,27,29,35,35,35,36,35,36,32,27,28,28,28,28,27,32,36,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,35,35,35,36,31,27,28,28,28,28,27,32,36,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,27,31,35,35,35,35,35,36,34,28,28,28,28,28,28,28,34,36,35,35,35,35,35,31,27,28,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,34,28,28,28,28,28,28,28,32,36,35,35,35,35,36,34,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,36,33,28,28,28,28,28,28,28,32,36,35,35,35,35,35,33,28,28,28,28,28,28,28,32,36,35,35,35,35,35,33,29,28,28,28,28,28,28,32,35,35,35,35,35,35,33,29,28,28,28,28,28,28,32,35,35,35,35,35,35,33,29,28,28,28,28,28,28,32,35,35,35,35,35,35,33,29,28,28,28,28,28,28,32,35,35,35,35,35,35,33,29,28,28,28,28,28,28,32,35,35,35,35,34,35,33,29,28,28,28,28,28,28,32,35,35,35,35,34,35,33,29,28,29,28,28,28,28,32,35,35,35,35,34,35,33,29,28,29,28,28,28,28,32,35,35,35,35,34,35,33,29,28,29,28,28,28,28,32,35,35,35,35,34,35,33,29,28,29,28,28,28,28,32,35,35,35,35,34,35,33,29,28,29,28,28,28,28,32,35,35,35,35,34,35,33,29,28,29,28,28,28,28,32,35,35,35,35,34,35,33,29,28,29,28,28,28,28,32,35,35,35,35,34,35,33,29,28,28,28,28,28,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,28,28,28,28,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,28,28,28,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,29,28,29,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,29,28,29,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,29,28,29,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,29,28,29,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,32,28,28,29,28,29,28,28,32,35,35,35,35,34,35,34,30,28,29,28,28,29,28,30,34,35,34,35,35,35,35,35,35,35,35,35,35,31,28,28,28,28,28,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,35,35,35,34,35,35,31,28,28,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,29,28,29,28,28,32,35,34,34,35,34,35,35,31,28,29,29,28,29,28,28,32,35,34,34,35,34,35,35,31,28,29,29,28,29,28,28,32,35,34,34,35,34,35,35,31,28,29,29,28,29,28,28,32,35,34,34,35,34,35,35,31,28,29,29,28,29,28,28,32,35,34,34,35,34,35,35,31,28,29,29,28,29,28,28,32,35,34,35,35,34,35,35,31,28,29,28,29,28,28,29,28,29,28,31,35,35,35,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,35,35,31,28,29,28,28,28,29,28,31,35,35,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,35,35,31,28,29,28,28,28,29,28,31,35,35,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,35,35,31,28,29,28,28,28,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,34,35,31,28,29,28,28,28,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,34,35,31,28,29,28,28,28,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,34,35,31,28,29,28,28,28,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,34,35,31,28,29,28,28,28,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,34,35,31,28,29,28,28,28,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,34,35,31,28,29,28,28,28,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,35,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,35,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,34,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,34,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,34,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,34,35,34,35,33,29,28,29,28,28,29,28,29,33,35,34,35,34,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,34,34,34,35,33,29,28,29,29,29,29,28,29,33,35,34,34,34,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,34,34,34,35,33,29,28,29,29,29,29,28,29,33,35,34,34,34,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,34,34,34,35,33,29,28,29,29,29,29,28,29,33,35,34,34,34,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,34,34,34,35,33,29,28,29,29,29,29,28,29,33,35,34,34,34,34,34,35,31,28,29,29,29,29,29,28,31,35,34,34,34,34,34,35,33,29,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,28,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,28,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,28,30,34,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,33,35,34,34,34,34,34,35,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,35,34,34,34,34,34,35,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,35,34,34,34,34,34,35,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,35,34,34,34,34,34,35,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,35,34,34,34,34,34,35,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,35,34,34,34,34,34,35,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,35,34,34,34,34,34,35,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,35,34,34,34,34,34,34,35,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,28,31,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,34,34,34,34,34,34,31,28,29,29,29,29,29,29,29,32,35,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,32,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,34,34,33,29,29,29,29,29,29,29,29,29,33,34,34,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,29,29,29,29,29,29,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,29,29,29,29,29,29,29,29,29,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,34,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,34,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,33,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,33,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,33,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,33,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,33,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,33,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,33,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,33,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,34,34,34,33,34,33,34,33,30,29,30,29,30,29,30,29,30,33,34,33,34,33,34,34,34,34,31,29,30,29,29,29,29,30,29,31,34,33,34,34,34,34,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,34,34,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,34,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,34,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,34,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,34,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,34,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,29,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,29,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,34,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,33,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,33,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,33,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,33,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,33,33,33,34,31,29,30,30,30,30,29,30,29,30,33,34,33,34,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,34,33,34,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,34,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,34,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,34,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,29,30,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30,33,34,33,33,33,33,33,33,34,33,30,30,30,30,30,30,30,30,29,31,33,33,33,33,33,33,33,33,33,31,29,30,30,30,30,30,30};
#define BANG_LEN 3585
const char bang[3585] = {31,31,31,32,32,32,32,32,32,32,31,31,31,31,31,31,32,32,31,31,32,32,32,32,32,32,32,32,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,31,31,32,32,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,31,31,32,32,32,32,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,31,31,31,31,31,31,31,31,31,31,31,31,30,30,30,30,31,31,31,30,30,31,31,31,31,31,31,31,31,31,31,31,31,35,44,50,49,45,40,36,34,32,30,30,28,24,22,20,18,18,17,21,26,28,29,29,30,31,32,32,32,32,31,31,30,29,29,30,30,31,31,30,30,31,30,32,33,31,31,32,32,35,38,40,43,45,44,44,42,41,37,31,25,25,27,28,29,27,25,25,28,33,35,36,39,40,37,33,28,27,27,26,27,27,28,29,27,25,24,24,26,28,31,33,32,32,35,35,34,35,35,35,35,33,35,38,37,37,36,35,36,36,35,35,35,34,34,34,32,32,29,26,27,29,29,31,31,28,29,32,32,30,30,33,35,33,31,31,32,31,28,26,27,28,28,28,28,27,28,29,29,30,31,31,32,32,32,30,29,29,30,32,33,33,33,34,34,35,35,35,34,33,31,31,31,30,31,34,32,32,32,33,34,32,32,32,33,35,34,32,31,31,28,26,27,28,29,30,31,30,30,29,29,31,33,33,30,32,34,35,35,35,37,35,32,33,31,28,30,31,28,28,28,29,30,27,27,30,33,35,33,32,33,35,33,31,30,31,32,31,29,29,29,30,28,29,30,31,33,32,32,35,34,35,37,36,37,35,34,34,33,37,34,26,26,27,28,29,30,30,28,30,33,33,34,33,32,31,30,33,33,32,29,24,27,27,28,29,27,28,31,32,31,29,27,26,26,27,29,26,25,27,27,30,35,33,33,38,39,35,34,36,36,36,38,38,37,37,34,33,35,32,31,33,31,26,29,31,27,31,30,27,32,31,35,31,33,40,27,35,37,25,24,17,23,29,33,34,29,35,34,40,44,37,40,41,41,37,29,30,28,27,32,25,24,31,24,28,33,30,30,28,39,33,24,34,25,29,31,22,26,24,26,22,19,26,24,22,22,22,25,31,31,33,38,40,45,42,42,44,45,45,39,43,38,31,37,33,34,32,28,38,34,28,31,33,37,30,28,34,29,21,20,21,22,21,23,25,24,28,26,24,28,29,26,25,32,34,30,33,37,32,33,36,38,41,41,42,41,39,38,39,44,41,40,44,42,41,43,37,31,36,28,22,30,25,17,20,25,24,24,25,27,32,29,29,28,31,32,26,29,17,10,31,18,8,23,25,33,33,25,33,36,37,38,38,49,55,48,37,35,37,31,26,23,21,20,20,25,27,27,29,33,35,35,39,42,44,42,39,38,35,36,31,29,35,28,31,33,29,35,30,31,40,41,42,44,48,43,46,51,40,34,32,31,29,30,28,18,25,32,24,19,22,27,23,14,27,36,34,35,31,26,25,34,38,35,44,44,40,39,37,28,13,14,20,14,9,18,19,10,2,7,24,22,24,34,26,23,22,30,34,25,25,28,32,39,39,38,39,42,42,49,55,46,49,57,54,54,59,58,54,54,52,50,49,42,39,34,26,25,24,19,25,29,24,28,30,31,32,27,29,25,19,21,18,12,10,14,16,19,24,21,23,29,28,35,39,38,43,41,39,38,35,35,34,34,31,26,23,16,15,16,17,25,27,24,28,36,38,35,36,35,33,31,29,27,29,31,29,29,29,31,36,35,34,39,43,43,42,43,40,40,41,38,39,38,37,36,35,37,36,34,33,32,33,32,28,26,23,24,29,30,31,33,34,30,29,29,30,35,36,37,40,40,39,37,33,34,34,28,28,30,24,24,23,19,22,22,23,26,26,23,24,29,26,24,27,27,25,26,28,28,29,31,35,41,42,42,45,46,47,47,44,41,41,39,37,37,32,29,31,29,28,33,34,32,35,34,28,25,24,26,29,29,28,28,24,22,26,27,27,33,31,31,38,37,31,32,30,28,29,29,31,33,32,33,33,33,34,32,31,28,31,31,25,24,24,25,25,21,27,31,30,32,31,30,34,40,42,39,40,40,40,43,43,43,43,39,39,37,31,30,33,33,31,32,34,35,37,36,33,34,35,34,36,34,31,29,26,28,30,26,25,25,23,24,26,26,29,33,36,40,38,39,43,41,36,32,31,28,25,26,28,26,22,20,22,25,24,23,25,25,27,30,26,29,33,30,29,29,27,28,28,26,22,24,26,26,29,31,32,35,36,39,40,39,37,35,37,37,35,35,35,33,36,36,36,40,38,33,34,36,33,33,30,26,27,28,26,29,31,33,36,35,36,38,38,38,39,37,38,39,35,37,39,38,37,35,36,36,33,28,26,27,27,24,23,21,20,23,23,24,25,24,26,27,29,32,30,31,29,26,26,26,26,26,23,24,28,28,28,30,32,35,35,33,36,33,29,30,29,30,30,27,31,33,34,35,39,43,41,42,43,39,40,41,38,35,35,36,35,34,34,37,38,37,35,33,32,31,31,33,29,25,25,24,23,23,20,21,27,27,26,26,24,25,24,23,24,24,27,29,27,29,32,35,38,41,38,37,39,37,35,33,29,25,24,29,30,27,24,29,34,35,38,38,39,38,36,37,34,32,33,31,31,31,28,26,28,31,30,29,32,31,30,31,31,31,29,28,31,30,29,32,31,33,35,36,37,37,39,42,42,40,40,37,35,37,32,30,28,28,32,30,29,27,29,32,31,31,30,26,27,26,26,28,25,24,25,25,25,25,25,27,31,29,28,34,35,34,35,33,35,37,38,37,36,37,33,32,35,32,34,36,34,32,30,30,30,31,31,30,27,27,29,30,29,26,27,30,28,34,35,31,35,36,36,36,35,35,35,34,33,33,31,32,34,32,32,31,30,31,30,30,28,28,27,26,28,25,26,25,24,28,29,30,30,31,34,35,36,37,37,37,38,37,34,30,29,29,27,24,22,25,28,29,29,32,34,35,39,41,40,38,40,46,47,44,41,43,43,40,38,38,35,31,29,29,28,27,26,24,22,23,25,25,25,28,31,31,27,25,29,29,29,30,31,33,32,34,35,31,29,27,27,32,34,30,28,27,29,31,28,27,27,29,33,31,29,29,32,34,34,33,31,32,35,37,36,33,34,35,29,27,29,30,32,36,34,31,33,36,39,41,41,39,35,36,35,34,30,23,21,20,18,17,15,19,22,26,30,32,40,44,43,42,43,48,46,42,43,43,40,37,32,29,29,25,22,23,28,33,30,25,22,25,31,32,27,29,28,28,32,31,29,25,20,23,31,32,30,30,30,32,36,39,40,40,39,38,37,37,32,26,28,31,29,29,30,32,35,33,32,34,38,38,37,36,36,38,38,33,29,29,31,29,24,24,25,25,29,32,32,32,32,34,34,34,35,36,35,35,35,33,32,30,32,33,29,28,26,23,23,23,24,25,24,25,25,24,25,29,28,28,31,31,33,34,34,35,35,33,34,36,35,32,30,32,35,37,36,34,34,33,31,33,35,35,33,32,32,32,32,31,32,36,37,35,33,32,30,32,33,31,31,30,30,30,30,32,30,29,32,34,35,35,34,33,32,32,32,33,30,27,29,29,28,27,26,27,28,32,35,36,37,37,36,37,37,37,36,35,34,34,33,30,28,27,25,24,25,25,26,25,27,29,30,32,32,31,32,34,37,39,36,33,32,32,32,30,27,26,29,33,34,32,32,33,36,36,30,27,30,34,36,36,34,34,36,36,36,37,35,33,32,32,31,29,29,31,31,32,32,31,32,32,31,30,31,32,29,28,29,27,26,23,22,27,28,26,27,29,28,29,34,34,33,33,33,33,33,32,31,32,32,32,34,35,34,35,37,34,32,33,35,35,34,34,33,33,36,35,30,29,30,31,31,30,28,29,30,29,32,33,31,35,35,33,34,34,34,33,33,32,30,32,33,32,30,27,27,27,27,26,26,27,26,27,28,28,29,31,32,35,34,33,33,32,31,32,31,31,30,30,30,29,31,31,31,32,34,36,37,34,32,32,31,30,33,32,28,30,29,26,28,29,31,33,34,35,36,38,38,37,38,38,37,36,35,33,30,30,30,29,29,29,30,29,29,29,29,29,28,29,32,31,30,32,33,33,32,32,35,34,34,34,33,33,31,29,28,28,29,30,31,31,30,32,33,31,32,33,33,35,33,29,29,29,30,29,26,27,30,31,32,31,31,32,34,34,34,36,35,30,30,31,31,31,30,32,32,31,31,31,34,35,33,33,33,34,32,32,34,34,34,33,34,37,35,32,31,31,32,30,29,28,28,30,28,25,26,28,30,28,29,31,32,32,32,31,30,29,31,32,31,30,29,30,30,28,30,31,31,31,30,31,33,32,31,31,32,34,34,33,34,35,33,31,32,31,30,30,30,30,29,27,28,29,28,29,31,31,32,34,36,36,36,36,36,35,35,34,33,32,31,30,29,29,28,30,30,31,31,31,31,31,31,33,32,31,32,33,32,31,30,31,31,29,30,33,35,36,34,35,37,36,35,31,28,30,33,33,31,29,30,30,29,27,26,29,29,30,30,30,32,33,33,35,36,36,35,32,30,30,30,27,26,28,29,29,31,31,31,30,30,33,36,36,35,36,35,33,33,33,32,31,31,31,30,27,27,28,28,28,28,29,31,32,33,34,32,32,33,33,34,33,31,32,31,29,28,29,31,31,31,30,30,33,34,34,34,34,35,36,35,33,32,29,30,29,29,30,28,29,30,30,31,31,31,31,32,33,32,32,32,32,33,32,33,34,33,33,32,31,31,30,30,30,30,30,30,29,28,27,28,28,28,28,29,31,32,33,34,34,34,33,32,32,32,31,31,30,31,31,31,31,32,32,31,32,34,33,32,30,30,30,30,31,30,29,30,32,34,33,33,34,36,36,36,36,36,37,38,37,35,35,34,32,32,33,31,30,30,30,29,26,25,26,27,30,30,31,31,32,33,32,31,31,30,28,26,26,26,24,25,25,24,25,24,26,29,31,32,32,33,34,35,36,35,36,35,36,37,37,36,34,35,35,34,32,31,31,32,32,32,32,32,31,32,32,32,33,33,33,34,33,32,32,30,29,29,27,27,26,26,26,27,29,29,29,30,31,34,33,31,31,32,33,34,33,32,32,33,33,33,31,30,32,32,31,33,33,33,34,34,34,34,34,31,32,34,35,35,34,32,32,33,33,32,32,33,31,31,30,28,28,28,28,29,28,28,29,32,34,32,32,32,32,31,31,32,32,30,29,28,27,27,26,27,29,29,31,33,35,35,35,35,36,36,35,33,33,32,32,31,29,30,30,30,29,29,30,31,32,32,32,31,30,31,31,31,31,30,31,32,31,30,31,31,32,34,32,31,31,31,33,33,32,32,33,33,33,34,33,33,34,34,35,34,33,35,33,33,32,32,33,33,32,31,32,32,30,29,30,29,30,30,29,30,29,29,29,30,30,31,31,30,32,32,31,32,31,31,32,30,30,31,29,27,28,28,27,29,29,29,31,33,32,32,33,34,34,34,34,34,33,33,32,31,31,31,32,33,33,32,33,34,34,33,32,32,33,32,32,34,31,29,30,30,32,33,32,32,32,33,34,32,34,35,33,33,32,29,28,29,31,34,32,29,30,32,34,34,33,33,34,33,32,33,33,33,32,31,30,29,31,32,32,34,32,30,29,29,31,32,33,33,34,33,31,32,32,32,33,33,33,32,32,31,29,28,29,29,29,29,29,30,32,32,32,32,32,33,33,33,34,32,32,31,29,29,28,28,27,27,30,30,29,30,30,31,32,31,32,32,31,32,30,30,31,30,31,32,33,33,33,35,35,34,35,35,34,37,37,34,35,37,38,37,34,31,32,39,34,22,26,32,34,29,20,26,33,31,29,29,32,41,44,40,38,38,34,33,30,29,29,27,26,21,17,19,22,23,22,26,32,32,32,34,36,36,37,39,37,33,35,38,37,34,34,32,26,24,24,28,33,32,28,28,31,34,34,33,35,38,38,37,36,36,37,38,36,34,33,34,34,33,34,35,33,31,30,32,33,30,30,30,27,25,23,22,25,26,24,25,25,24,28,31,31,28,29,34,36,33,30,29,32,31,28,25,25,26,26,27,26,27,30,32,35,37,38,36,34,36,37,38,37,35,36,37,35,34,32,32,33,32,30,30,30,32,33,33,36,36,36,37,35,32,31,33,36,34,34,35,35,34,33,32,31,31,30,29,29,30,29,28,29,29,29,27,26,29,33,33,32,33,31,30,31,30,32,35,33,32,30,29,31,30,28,28,29,31,31,31,30,28,29,32,34,35,34,31,33,39,39,34,29,29,31,29,26,27,29,29,31,30,28,28,29,30,32,34,35,34,34,34,33,34,37,35,32,33,33,32,31,32,33,32,32,33,34,33,32,32,32,33,33,33,33,32,33,32,31,31,30,30,32,32,31,30,31,31,30,29,27,28,28,27,27,28,27,27,27,27,26,25,26,27,28,30,31,33,35,36,36,35,34,34,35,35,34,34,32,31,33,34,34,32,32,33,34,34,34,34,35,35,35,34,33,32,34,34,32,32,32,32,33,33,33,34,34,34,34,33,34,36,34,33,32,31,30,29,28,27,27,27,27,25,27,29,30,30,29,29,30,31,30,30,31,32,30,27,26,26,27,27,28,29,29,29,31,32,34,35,34,35,36,35,35,33,30,30,31,31,32,31,32,33,34,35,36,36,35,36,36,34,33,32,30,30,31,29,29,31,33,32,31,30,31,31,30,29,31,32,31,29,28,28,28,29,28,30,31,31,31,33,33,33,35,34,35,36,36,35,34,34,34,33,33,32,31,31,31,29,30,31,29,30,31,30,28,30,32,32,31,31,31,29,30,30,30,30,31,31,31,31,30,30,30,30,30,30,30,30,30,30,30,30,31,32,32,32,34,34,32,32,33,34,33,33,34,34,33,32,32,32,33,32,32,34,34,32,32,33,33,31,31,31,32,32,31,30,30,30,30,30,30,30,30,31,31,31,31,30,30,30,31,30,30,30,30,31,32,31,31,32,31,31,31,31,33,32,31,31,32,32,33,33,32,33,34,34,35,35,33,33,32,32,30,30,30,30,29,28,29,30,30,31,31,31,31,30,31,31,31,31,31,30,30,30,30,30,32,32,31,30,31,32,32,31,31,32,32,33,32,32,31,31,31,30,31,32,31,30,29,30,33,32,32,32,33,34,33,32,31,32,33,31,30,31,31,30,30,30,31,31,31,32,34,35,35,35,36,37,37,35,36,36,35,34,32,31,30,30,29,28,28,28,28,28,29,29,27,28,29,30,33,32,31,31,32,32,31,30,29,29,28,28,28,27,27,27,27,28,29,29,30,32,33,33,33,32,32,33,31,30,30,29,29,30,30,31,31,31,33,35,35,36,36,35,35,36,35,35,34,34,34,34,34,34,33,32,32,32,33,33,33,33,31,31,32,32,30,29,29,29,30,29,28,28,28,30,29,29,30,30,31,31,31,31,30,29,29,29,30,31,31,31,32,31,32,32,32,33,32,33,34,31,31,31,31,30,28,29,30,29,30,29,29,30,32,32,32,34,35,33,33,34,33,32,31,32,35,32,37,42,37,40,38,31,33,30,28,31,27,27,29,26,22,21,22,21,25,26,26,31,28,28,33,36,37,34,33,33,34,36,37,37,35,37,38,35,34,34,35,38,37,35,34,34,36,36,35,35,34,33,31,30,30,30,30,28,28,28,28,28,27,26,25,25,26,25,26,28,30,31,31,31,31,31,31,32,32,32,32,33,33,33,33,32,32,33,32,32,32,32,34,35,34,34,34,34,32,32,32,32,31,31,32,31,32,33,32,31,31,32,32,32,31,31,30,32,32,31,31,30,29,29,29,29,29,28,28,29,29};
#define len 1036
const char quickjump[1036] = {31,32,31,32,31,32,32,31,32,32,31,31,32,32,31,32,31,31,32,32,32,32,32,32,31,32,32,32,31,32,32,31,31,32,31,31,32,32,31,32,31,31,32,32,32,32,32,31,32,32,31,32,31,31,31,31,31,32,32,31,31,31,31,31,32,32,31,32,32,32,32,32,32,31,31,31,31,31,31,31,31,32,31,31,31,31,31,32,32,32,32,32,32,32,32,33,32,33,33,33,33,33,33,33,33,32,31,31,31,30,30,30,29,29,29,29,29,29,29,29,29,30,30,31,31,32,32,33,33,34,34,34,34,34,34,34,34,34,33,33,32,32,32,31,31,30,30,30,29,29,28,29,29,29,30,30,30,30,31,31,32,33,33,33,33,33,34,34,34,34,34,34,33,33,33,32,32,31,31,29,30,30,29,29,29,29,29,30,30,30,31,31,32,32,31,34,33,34,34,34,34,34,34,33,34,34,30,31,32,30,31,30,30,29,29,30,29,30,30,30,31,29,31,32,32,33,33,34,34,34,34,34,35,31,32,33,31,32,31,30,30,29,30,29,30,30,30,31,29,30,32,31,33,33,33,34,34,34,35,34,31,33,33,31,33,31,31,30,30,30,29,30,30,30,30,29,32,32,32,33,33,33,34,34,34,34,31,32,33,31,32,31,30,30,30,30,29,30,30,31,30,29,32,32,33,33,33,34,33,34,34,31,32,32,31,31,30,30,29,30,30,30,31,31,32,32,31,33,33,33,34,33,33,32,30,30,30,30,30,30,30,30,32,32,30,33,33,33,34,33,33,31,33,30,28,31,30,29,31,30,31,33,31,30,34,33,33,33,32,32,31,30,31,29,29,31,30,31,32,32,33,33,34,33,31,33,32,31,32,30,30,30,30,31,31,34,32,31,34,32,33,32,31,31,31,31,29,30,31,31,32,32,33,33,33,33,32,32,30,29,31,30,31,31,32,33,31,32,33,33,32,32,31,30,31,29,30,32,31,33,33,32,33,31,30,31,31,30,31,31,32,33,31,32,33,32,32,31,30,31,31,30,31,33,32,33,32,32,32,30,30,31,31,32,32,32,33,31,33,31,29,31,31,31,32,32,33,31,32,32,31,31,31,32,32,31,32,32,32,31,31,30,32,32,30,32,33,32,31,31,31,30,31,32,33,32,32,32,30,30,31,31,32,32,33,31,31,32,31,31,31,30,32,33,32,32,32,30,30,32,31,32,33,31,31,32,31,32,31,31,32,32,32,32,30,30,32,32,32,33,31,31,31,31,32,32,31,32,32,31,32,31,31,33,32,32,31,30,32,32,32,32,30,31,32,32,33,31,31,32,31,32,31,31,32,31,32,30,31,33,32,32,30,31,32,32,32,30,31,32,33,32,30,31,32,33,31,30,31,32,32,31,31,32,32,32,31,31,32,32,31,31,32,32,31,31,32,32,32,31,31,32,32,31,31,32,32,31,31,32,32,31,31,32,32,31,31,32,32,31,31,32,32,31,31,32,32,31,31,32,32,31,31,32,32,31,32,32,31,31,32,32,31,31,32,32,31,31,32,31,31,32,32,31,32,32,31,31,32,32,31,31,32,31,31,32,32,31,31,32,32,31,32,32,31,32,32,31,31,32,32,31,32,32,31,31,32,31,31,32,32,31,32,32,31,32,32,31,32,32,31,32,32,31,32,32,31,32,32,31,32,32,31,31,32,32,31,32,31,31,32,32,31,32,32,31,32,31,31,32,31,31,32,32,31,32,32,31,32,32,31,32,32,31,32,31,31,32,31,32,31,31,32,31,31,31,31,32,31,32,31,31,32,31,32,32,31,32,31,31,32,31,32,31,31,32,31,32,32,31,32,31,31,32,31,31,31,32,31,31,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,31,32,32,31,31,32,31,31,32,32,31,32,32,31,32,32,31,32,32,31,32,32,31,31,32,32,31,32,31,32,31,31,32,31,32,32,31,31,32,31,32,31,32,32,31,32,31,32,31,32,32,31,32,31,32,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,32,32,31,32,31,31,32,31,32,32,31,32,31,31,32,31,32,31,32,31,31,32,32,31,32,31,32,32,31,32,31,32,31,31,32,31,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,31,32,31,32,31,32,31,31,32,31,32,32,32,31,31,31,32,31,32,32,31,32,32,31,31,32,31,32,32};
// const char quickjump[3216] = {32,30,26,25,26,29,33,36,39,40,38,35,29,25,24,27,32,38,41,39,34,27,23,24,30,38,42,39,31,23,21,26,35,42,41,32,22,20,26,37,43,39,29,21,21,29,40,43,35,24,18,24,36,43,39,28,18,20,31,42,43,33,20,17,26,39,44,37,24,17,22,35,43,40,28,19,20,31,41,41,31,21,20,28,38,41,34,24,21,27,35,39,34,27,23,27,33,37,34,29,26,28,32,35,34,30,28,28,32,34,33,31,29,30,32,33,33,31,30,30,32,33,32,31,31,31,32,33,32,32,31,32,32,32,32,32,32,32,33,33,32,32,32,32,33,32,32,32,32,32,33,33,32,32,32,32,33,33,32,32,32,32,32,33,32,32,32,32,32,33,33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,31,31,31,32,32,32,32,32,32,31,31,31,31,32,32,32,32,32,31,31,31,31,31,32,32,32,31,31,31,31,31,31,32,32,31,31,31,31,31,31,32,32,31,31,31,31,31,31,31,32,32,31,31,31,31,31,31,32,32,31,31,31,31,31,32,32,31,31,31,31,31,31,32,32,31,31,31,31,31,31,32,32,31,31,31,31,31,32,32,31,31,31,31,31,32,32,31,31,31,31,32,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,32,31,31,32,32,32,32,32,31,31,32,32,32,32,32,31,31,32,32,32,32,32,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,31,31,32,32,32,32,32,32,32,32,32,32,31,31,32,32,32,32,32,32,31,31,32,32,32,32,32,31,31,32,32,32,32,32,31,32,32,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,32,32,31,31,32,32,32,32,31,31,32,32,32,32,31,31,31,32,32,32,32,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,31,31,31,31,31,32,32,32,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,31,31,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,32,31,31,31,31,31,32,32,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,32,32,32,32,31,31,31,31,31,32,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,32,31,31,31,31,31,32,32,32,31,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,32,32,32,31,31,31,31,32,32,32,32,31,31,31,31,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,32,31,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,32,32,31,31,31,32,32,32,32,31,31,31,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,32,32,31,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,32,32,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,32,31,31,31,31,32,32,32,32,31,31,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,31,31,31,31,32,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,32,31,31,31,31,32,32,32,31,31,31,31,31,32,32,32,31,31,31,31,31,31,32,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,32,32,31,31,31,31,32,32,32,32,31,31,31,31,32,32,32,32,31,31,31,31,31,31,31,32,32,32,32,31,31,31,31,32,32,32,32,31,31,31,31,32,32,32,32,31,31,31,32,32,31,31,31,31,32,32,31,31,31,31,32,32,32,32,31,31,31,31,32,31,32,31,32,31,31,31,31,31,31,32,32,32,31,31,31,31,31,32,32,32,32,31,31,31,31,31,31,32,32,32,32,31,31,31,31,31,31,31,31,32,32,32,31,31,31,31,32,32,31,31,31,31,32,32,32,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,31,31,32,32,32,31,31,32,32,32,32,31,31,31,31,32,32,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,31,31,32,31,32,31,32,32,31,32,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32};

//********************************************************************************
// debuging profile, pick up to 7 unused bits and send to Logic Analyzer
#define PA54                  (*((volatile uint32_t *)0x400040C0)) // bits 5-4
#define PF321                 (*((volatile uint32_t *)0x40025038)) // bits 3-1
// use for debugging profile
#define PF1       (*((volatile uint32_t *)0x40025008))
#define PF2       (*((volatile uint32_t *)0x40025010))
#define PF3       (*((volatile uint32_t *)0x40025020))
#define PA5       (*((volatile uint32_t *)0x40004080)) 
#define PA4       (*((volatile uint32_t *)0x40004040)) 

// TExaSdisplay logic analyzer shows 7 bits 0,PA5,PA4,PF3,PF2,PF1,0 
void LogicAnalyzerTask(void){
  UART0_DR_R = 0x80|PF321|PA54; // sends at 10kHz
}
void ScopeTask(void){  // called 10k/sec
  UART0_DR_R = (ADC1_SSFIFO3_R>>4); // send ADC to TExaSdisplay
}
void Profile_Init(void){
  SYSCTL_RCGCGPIO_R |= 0x21;      // activate port A,F
  while((SYSCTL_PRGPIO_R&0x21) != 0x21){};
  GPIO_PORTF_DIR_R |=  0x0E;   // output on PF3,2,1 
  GPIO_PORTF_DEN_R |=  0x0E;   // enable digital I/O on PF3,2,1
  GPIO_PORTA_DIR_R |=  0x30;   // output on PA4 PA5
  GPIO_PORTA_DEN_R |=  0x30;   // enable on PA4 PA5
	//GPIO_PORTE_DIR_R &=  ~0x0F;  // input on PE3-PE0
	//GPIO_PORTE_AFSEL_R &= ~0x0F; // disable alt function on PE3-PE0
	//GPIO_PORTE_DEN_R |= 0x0F;    // enable digital I/O on PE3-PE0
}
//********************************************************************************

extern "C" void GPIOE_Handler(void);

typedef struct sprite
{
	int xpos;
	int ypos;
	const unsigned char *image;
	bool alive;
	
} Sprite;

extern "C" Sprite mario = {12, 56, standmario, false};
extern "C" Sprite mariojumping = {12, 56, luigijump, false};
extern "C" Sprite mariocrouching = {12, 56, mariocrouch, false};
extern "C" Sprite luigi1 = {12, 56, luigi, false};
extern "C" Sprite luigijumping = {12, 56, luigi, false};
extern "C" Sprite luigicrouching = {12, 56, mariocrouch, false};
extern "C" Sprite yoshi = {12, 56, newyoshi, false};
extern "C" Sprite yoshijumping = {12, 56, newyoshi, false};
extern "C" Sprite yoshicrouching = {12, 56, eggyoshi, false};
extern "C" Sprite snowman = {128, 56, snowmans, false};
extern "C" Sprite flyball = {127, 40, hail, false};

volatile int FallingEdges = 0;
int ready = 0;
int keepTrack = 0;
int Lives;
int score = 0;
bool lifeDone = false;
int lang = 0;
int level = 0;
int sub = 2;

void EdgeCounter_Init(void)
{       

  SYSCTL_RCGCGPIO_R |= 0x00000010; // (a) activate clock for port E
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	__nop();
	

  FallingEdges = 0;             //  keep track of entering handler
	//GPIO_PORTE_AMSEL_R &= ~0x04;  // disable analog function on PE2
	//GPIO_PORTE_PCTL_R &= ~0x00000F00; // configure PE2 as GPIO
  GPIO_PORTE_DIR_R &= ~0x06;    //  make PE3-PE0 inputs
	//GPIO_PORTE_AFSEL_R &= ~0x04;
  GPIO_PORTE_DEN_R |= 0x06;     //  enable digital I/O on PE3-PE0
  //GPIO_PORTF_PUR_R |= 0x10;   //  --> already have external pull-up
  GPIO_PORTE_IS_R &= ~0x06;     //  PE3-PE0 is edge-sensitive
  GPIO_PORTE_IBE_R &= ~0x06;    	//  PE3-PE0 is not both edges
  GPIO_PORTE_IEV_R &= ~0x06;    //  PE3-PE0 falling edge event
  GPIO_PORTE_ICR_R = 0x06;      //  clear flags for PE3-PE0
  GPIO_PORTE_IM_R |= 0x06;      //  arm interrupts on PE3-PE0
  NVIC_PRI1_R = (NVIC_PRI1_R & 0xFFFFFF0F)|0x00000040; // (g) priority 2 for NVIC_PRI1_R
  NVIC_EN0_R |= 0x00000010;     // (h) enable interrupt 4 in NVIC

}

void printLives()
{
	if(lang == 0)  {SSD1306_DrawString(60, 4, ((char *) "Lives:"), SSD1306_WHITE); SSD1306_DrawChar(110, 4, ((char) Lives + '0'), SSD1306_WHITE);}
	else if(lang == 1)  {SSD1306_DrawString(60, 4, ((char *) "Des Vies:"), SSD1306_WHITE); SSD1306_DrawChar(120, 4, ((char) Lives + '0'), SSD1306_WHITE);}
}

bool checkCollisions(Sprite temp)
{
		if(mario.alive == true)
		{
			if(snowman.alive == true)
			{
				int xSnow = temp.xpos - keepTrack; // keepTrack is a sub for snowman.xpos, remember all characters' xpos are same!
				if(xSnow < 0) {xSnow *= -1;}
				int ySnow = temp.ypos - snowman.ypos;
				if(ySnow < 0) {ySnow *= -1;}
				if(xSnow <= 5 && ySnow <= 15) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				return false;
			}
			
			else if(flyball.alive == true)
			{
				int xSnow = temp.xpos - keepTrack; // keepTrack is a sub for snowman.xpos, remember all characters' xpos are same!
				if(xSnow < 0) {xSnow *= -1;}
				int ySnow = temp.ypos - flyball.ypos; // 1st hail
				if(ySnow < 0) {ySnow *= -1;}
				int zSnow = temp.ypos - (flyball.ypos - 20); // 2nd hail
				if(zSnow < 0) {zSnow *= - 1;}
				if(xSnow <= 5 && ySnow <= 20 && temp.image != mariocrouching.image) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				if(xSnow <= 5 && zSnow <= 20) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				return false;
			}
		}
		
		if(luigi1.alive == true)
		{
			if(snowman.alive == true)
			{
				int xSnow = temp.xpos - keepTrack; // keepTrack is a sub for snowman.xpos, remember all characters' xpos are same!
				if(xSnow < 0) {xSnow *= -1;}
				int ySnow = temp.ypos - snowman.ypos;
				if(ySnow < 0) {ySnow *= -1;}
				if(xSnow <= 5 && ySnow <= 15) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				return false;
			}
			
			else if(flyball.alive == true)
			{
				int xSnow = temp.xpos - keepTrack; // keepTrack is a sub for snowman.xpos, remember all characters' xpos are same!
				if(xSnow < 0) {xSnow *= -1;}
				int ySnow = temp.ypos - flyball.ypos; // 1st hail
				if(ySnow < 0) {ySnow *= -1;}
				int zSnow = temp.ypos - (flyball.ypos - 20); // 2nd hail
				if(zSnow < 0) {zSnow *= - 1;}
				if(xSnow <= 5 && ySnow <= 20 && temp.image != luigicrouching.image) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				if(xSnow <= 5 && zSnow <= 20) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				return false;
			}
		}
		
		else if(yoshi.alive == true)
		{
			if(snowman.alive == true)
			{
				int xSnow = temp.xpos - keepTrack; // keepTrack is a sub for snowman.xpos, remember all characters' xpos are same!
				if(xSnow < 0) {xSnow *= -1;}
				int ySnow = temp.ypos - snowman.ypos;
				if(ySnow < 0) {ySnow *= -1;}
				if(xSnow <= 5 && ySnow <= 15) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				return false;
			}
			
			else if(flyball.alive == true)
			{
				int xSnow = temp.xpos - keepTrack; // keepTrack is a sub for snowman.xpos, remember all characters' xpos are same!
				if(xSnow < 0) {xSnow *= -1;}
				int ySnow = temp.ypos - flyball.ypos; // 1st hail
				if(ySnow < 0) {ySnow *= -1;}
				int zSnow = temp.ypos - (flyball.ypos - 20); // 2nd hail
				if(zSnow < 0) {zSnow *= - 1;}
				if(xSnow <= 5 && ySnow <= 20 && temp.image != yoshicrouching.image) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				if(xSnow <= 5 && zSnow <= 20) 
				{
					SoundST(bang, BANG_LEN);
					return true;
				}
				return false;
			}
		}
		
		return false;
}

void Crouching()
{
	if(ready == 0) {return;}
	if(mario.alive == true)
	{
		mariocrouching.alive = true;
		for(int a = 0; a < 48; a += (sub - 1))
		{
				if
				(checkCollisions(mariocrouching)) 
				{
						(Lives)--; 
						lifeDone = true;
						mariocrouching.alive = false; 
						return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(mario.xpos, mario.ypos, mariocrouching.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(keepTrack, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					keepTrack -= sub;
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(keepTrack, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					SSD1306_DrawBMP(keepTrack, flyball.ypos - 20, flyball.image, 0, SSD1306_WHITE); 
					keepTrack -= sub;
				}
				printLives();
				SSD1306_OutBuffer();
				for(int b = 0; b < 800; b++) {}
		}
		
		score += 5;
		SSD1306_ClearBuffer();
		SSD1306_DrawBMP(mario.xpos, mario.ypos, mario.image, 0, SSD1306_WHITE);
		SSD1306_OutBuffer();
		mariocrouching.alive = false;
	}	
	
	else if(luigi1.alive == true)
	{
		luigicrouching.alive = true;
		for(int a = 0; a < 48; a += (sub - 1))
		{
				if(checkCollisions(luigicrouching)) 
				{
					(Lives)--; 
					lifeDone = true;
					luigicrouching.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(luigi1.xpos, luigi1.ypos, luigicrouching.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(keepTrack, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					keepTrack -= sub;
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(keepTrack, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					SSD1306_DrawBMP(keepTrack, flyball.ypos - 20, flyball.image, 0, SSD1306_WHITE); 
					keepTrack -= sub;
				}
				printLives();
				SSD1306_OutBuffer();
				for(int b = 0; b < 800; b++) {}
		}
		
		score += 5;
		SSD1306_ClearBuffer();
		SSD1306_DrawBMP(luigi1.xpos, luigi1.ypos, luigi1.image, 0, SSD1306_WHITE);
		SSD1306_OutBuffer();
		luigicrouching.alive = false;
	}
	
	else if(yoshi.alive == true)
	{
		yoshicrouching.alive = true;
		for(int a = 0; a < 48; a += (sub - 1))
		{
				if(checkCollisions(yoshicrouching)) 
				{
					(Lives)--; 
					lifeDone = true;
					yoshicrouching.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(yoshi.xpos, yoshi.ypos, yoshicrouching.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(keepTrack, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					keepTrack -= sub;
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(keepTrack, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					SSD1306_DrawBMP(keepTrack, flyball.ypos - 20, flyball.image, 0, SSD1306_WHITE); 
					keepTrack -= sub;
				}
				printLives();
				SSD1306_OutBuffer();
				for(int b = 0; b < 800; b++) {}
		}
		
		score += 5;
		SSD1306_ClearBuffer();
		SSD1306_DrawBMP(yoshi.xpos, yoshi.ypos, yoshi.image, 0, SSD1306_WHITE);
		SSD1306_OutBuffer();
		yoshicrouching.alive = false;
	}
}

void Jumping()
{
	int i;
	if(ready == 0) {return;}
	if(mario.alive == true)
	{
			mariojumping.alive = true;
			int j;
			if(snowman.alive == true) {j = keepTrack;}
			if(flyball.alive == true) {j = keepTrack;}
			for(i = mario.ypos; i >= 20; i -= sub)
			{
				if(checkCollisions(mariojumping)) 
				{
					(Lives)--; 
					lifeDone = true;
					mariojumping.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(mario.xpos, i, mariojumping.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(j, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(j, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					SSD1306_DrawBMP(j, flyball.ypos - 20, flyball.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				printLives();
				SSD1306_OutBuffer();
				for(int k = 0; k < 800; k++) {}
			  mariojumping.ypos = i;
			}
			
			for(i = i; i <= 56; i += sub)
			{
				if(checkCollisions(mariojumping)) 
				{
					(Lives)--; 
					lifeDone = true;
					mariojumping.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(mario.xpos, i, mariojumping.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(j, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(j, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				printLives();
				SSD1306_OutBuffer();
				for(int k = 0; k < 800; k++) {}
				mariojumping.ypos = i;
			}
			
			score += 10;
			SSD1306_ClearBuffer();
			SSD1306_DrawBMP(mario.xpos, mario.ypos, mario.image, 0, SSD1306_WHITE);
			SSD1306_OutBuffer();
			mariojumping.alive = false;
	}
	
	else if(luigi1.alive == true)
	{
			luigijumping.alive = true;
			int j;
			if(snowman.alive == true) {j = keepTrack;}
			if(flyball.alive == true) {j = keepTrack;}
			for(i = luigi1.ypos; i >= 24; i -= sub)
			{
				if(checkCollisions(luigijumping)) 
				{
					(Lives)--; 
					lifeDone = true;
					luigijumping.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(luigi1.xpos, i, luigijumping.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(j, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(j, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					SSD1306_DrawBMP(j, flyball.ypos - 20, flyball.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				printLives();
				SSD1306_OutBuffer();	
				for(int k = 0; k < 800; k++) {}
			  luigijumping.ypos = i;
			}
			
			for(i = i; i <= 56; i += sub)
			{
				if(checkCollisions(luigijumping)) 
				{
					(Lives)--; 
					lifeDone = true;
					luigijumping.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(luigi1.xpos, i, luigijumping.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(j, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(j, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				printLives();
				SSD1306_OutBuffer();
				for(int k = 0; k < 800; k++) {}
				luigijumping.ypos = i;
			}
			
			score += 10;
			SSD1306_ClearBuffer();
			SSD1306_DrawBMP(luigi1.xpos, luigi1.ypos, luigi1.image, 0, SSD1306_WHITE);
			SSD1306_OutBuffer();
			luigijumping.alive = false;
	}
	
	else if(yoshi.alive == true)
	{
			yoshijumping.alive = true;
			int j;
			if(snowman.alive == true) {j = keepTrack;}
			if(flyball.alive == true) {j = keepTrack;}
			for(i = yoshi.ypos; i >= 24; i -= sub)
			{
				if(checkCollisions(yoshijumping)) 
				{
					(Lives)--; 
					lifeDone = true;
					yoshijumping.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(yoshi.xpos, i, yoshijumping.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(j, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(j, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					SSD1306_DrawBMP(j, flyball.ypos - 20, flyball.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				printLives();
				SSD1306_OutBuffer();	
				for(int k = 0; k < 800; k++) {}
			  yoshijumping.ypos = i;
			}
			
			for(i = i; i <= 56; i += sub)
			{
				if(checkCollisions(yoshijumping)) 
				{
					(Lives)--; 
					lifeDone = true;
					yoshijumping.alive = false; 
					return;
				}
				SSD1306_ClearBuffer();
				SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
				SSD1306_DrawBMP(yoshi.xpos, i, yoshijumping.image, 0, SSD1306_WHITE);
				if(snowman.alive == true) 
				{
					SSD1306_DrawBMP(j, snowman.ypos, snowman.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				if(flyball.alive == true) 
				{
					SSD1306_DrawBMP(j, flyball.ypos, flyball.image, 0, SSD1306_WHITE); 
					j -= sub; 
					keepTrack -= sub; 
				}
				printLives();
				SSD1306_OutBuffer();
				for(int k = 0; k < 800; k++) {}
				yoshijumping.ypos = i;
			}
			
			score += 10;
			SSD1306_ClearBuffer();
			SSD1306_DrawBMP(yoshi.xpos, yoshi.ypos, yoshi.image, 0, SSD1306_WHITE);
			SSD1306_OutBuffer();
			yoshijumping.alive = false;
	}
}

void DrawBackground(void)
{
	int check = Random();
	if(check < 255/2)
	{
		snowman.alive = true;
		flyball.alive = false;
		for(keepTrack = snowman.xpos - 8; keepTrack >= sub; keepTrack -= sub)
		{
			if(mario.alive == true)
			{
				if(checkCollisions(mario) && mariojumping.alive == false && mariocrouching.alive == false) 
				{
					if(lifeDone == false) {(Lives)--;} 
					snowman.alive = false; 
					return;
				}
			}
			
			else if(luigi1.alive == true)
			{
				if(checkCollisions(luigi1) && luigijumping.alive == false && luigicrouching.alive == false) 
				{
					if(lifeDone == false) {(Lives)--;} 
					snowman.alive = false; 
					return;
				}				
			}
			
			else if(yoshi.alive == true)
			{
				if(checkCollisions(yoshi) && yoshijumping.alive == false && yoshicrouching.alive == false) 
				{
					if(lifeDone == false) {(Lives)--;} 
					snowman.alive = false; 
					return;
				}				
			}
			SSD1306_ClearBuffer();
			SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
			if(mario.alive == true) {SSD1306_DrawBMP(mario.xpos, mario.ypos, mario.image, 0, SSD1306_WHITE);}
			if(luigi1.alive == true) {SSD1306_DrawBMP(luigi1.xpos, luigi1.ypos, luigi1.image, 0, SSD1306_WHITE);}
			if(yoshi.alive == true) {SSD1306_DrawBMP(yoshi.xpos, yoshi.ypos, yoshi.image, 0, SSD1306_WHITE);}
			SSD1306_DrawBMP(keepTrack, snowman.ypos, snowman.image, 0, SSD1306_WHITE);
			printLives();
			SSD1306_OutBuffer();
			for(int t = 0; t < 2000; t++);
		}
		snowman.alive = false;
	}
	
	else
	{
		flyball.alive = true;
		snowman.alive = false;
		for(keepTrack = flyball.xpos - 8; keepTrack >= sub; keepTrack -= sub)
		{
			if(mario.alive == true)
			{
				if(checkCollisions(mario) && mariojumping.alive == false && mariocrouching.alive == false) 
				{
					if(lifeDone == false) {(Lives)--;} 
					flyball.alive = false; 
					return;
				}			
			}
			
			else if(luigi1.alive == true)
			{
				if(checkCollisions(luigi1) && luigijumping.alive == false && luigicrouching.alive == false) 
				{
					if(lifeDone == false) {(Lives)--;} 
					flyball.alive = false; 
					return;
				}				
			}

			else if(yoshi.alive == true)
			{
				if(checkCollisions(yoshi) && yoshijumping.alive == false && yoshicrouching.alive == false) 
				{
					if(lifeDone == false) {(Lives)--;} 
					flyball.alive = false; 
					return;
				}				
			}
			SSD1306_ClearBuffer();
			SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
			if(mario.alive == true) {SSD1306_DrawBMP(mario.xpos, mario.ypos, mario.image, 0, SSD1306_WHITE);}
			if(luigi1.alive == true) {SSD1306_DrawBMP(luigi1.xpos, luigi1.ypos, luigi1.image, 0, SSD1306_WHITE);}
			if(yoshi.alive == true) {SSD1306_DrawBMP(yoshi.xpos, yoshi.ypos, yoshi.image, 0, SSD1306_WHITE);}
			SSD1306_DrawBMP(keepTrack, flyball.ypos, flyball.image, 0, SSD1306_WHITE);
			SSD1306_DrawBMP(keepTrack, flyball.ypos - 20, flyball.image, 0, SSD1306_WHITE);
			printLives();
			SSD1306_OutBuffer();
			for(int t = 0; t < 2000; t++) {}
		}
		flyball.alive = false;
	}
}

void GPIOE_Handler(void)
{
	//if(GPIO_PORTE_RIS_R & 0x01) {/* Jump */} 
	//else if(GPIO_PORTE_RIS_R & 0x02) {/* Crouch */} 
	if(GPIO_PORTE_RIS_R & 0x02) 
	{
		if(ready != 0) Sound_Start(jump, JUMP_LEN);
		Jumping(); 
		/*Crouching();*/
	} 
	else if(GPIO_PORTE_RIS_R & 0x04) 
	{
		if(ready != 0) SoundST(quickjump, len);
		Crouching(); 
		/*Jumping();*/
	} 

  FallingEdges = FallingEdges + 1;
	
	GPIO_PORTE_ICR_R = 0x07;      // acknowledge flag 2 and 1
	
	if(Lives <= 0) {ready = 0;}
}

extern "C" void DisableInterrupts(void);
extern "C" void EnableInterrupts(void);
extern "C" void SysTick_Handler(void);
void Delay100ms(uint32_t count); // time delay in 0.1 seconds
void SysTick_Init(unsigned long period);

SlidePot my(150, 0);

// **************SysTick_Init*********************
// Initialize Systick periodic interrupts
// Input: interrupt period
//        Units of period are 12.5ns
//        Maximum is 2^24-1
//        Minimum is determined by length of ISR
// Output: none
void SysTick_Init(unsigned long period)
{
  
	NVIC_ST_CTRL_R = 0x00;									// disable SysTick on initialization
	NVIC_ST_RELOAD_R = period - 1;					// set RELOAD value to be the period
	NVIC_ST_CURRENT_R	= 0x00;								// clear CURRENT register
	NVIC_SYS_PRI3_R = (NVIC_SYS_PRI3_R 
										& 0x00FFFFFF) 
										| 0x60000000;					// set priority to 3
	NVIC_ST_CTRL_R |= 0x07;									// enable SysTick, interrupts, and clock
	
}

void Pause()
{
			SSD1306_OutClear();
			SSD1306_SetCursor(4, 3);
			if(lang == 0) SSD1306_OutString((char *) "Resuming In...");
			if(lang == 1) SSD1306_OutString((char *) "Reprise Dans...");
			SSD1306_SetCursor(8, 5);
			SSD1306_OutUDec2(3);
			for(int i = 0; i < (80000 * 50); i++) {}
			SSD1306_OutClear();
			SSD1306_SetCursor(4, 3);
			if(lang == 0) SSD1306_OutString((char *) "Resuming In...");
			if(lang == 1) SSD1306_OutString((char *) "Reprise Dans...");
			SSD1306_SetCursor(8, 5);
			SSD1306_OutUDec2(2);
			for(int i = 0; i < (80000 * 50); i++) {}
			SSD1306_OutClear();
			SSD1306_SetCursor(4, 3);
			if(lang == 0) SSD1306_OutString((char *) "Resuming In...");
			if(lang == 1) SSD1306_OutString((char *) "Reprise Dans...");
			SSD1306_SetCursor(8, 5);
			SSD1306_OutUDec2(1);
			for(int i = 0; i < (80000 * 50); i++) {}
}

void SysTick_Handler(void)
{
	
  //GPIO_PORTF_DATA_R ^= 0x02;											// toggle PF 3-1
	if(ready == 0) {return;}
	int test;
	if(level == 1) {test = Random(); if(test > (255/2)) {sub = 3;} else {sub = 2;}} 
	if(level == 2) {test = Random(); if((test > (255/3)) && (test < ((2 * 255)/3))) {sub = 3;} else if(test > ((2 * 255)/3)) {sub = 4;} else {sub = 2;}}
	DrawBackground();
	lifeDone = false;
  my.Save(ADC_In());
	int temp = my.ADCsample();
	while(temp > (4096/2)) 
	{
		my.Save(ADC_In());
		temp = my.ADCsample();
		if(temp <= (4096/2))
		{
			Pause();
		}
	}
	
	if(Lives <= 0) {ready = 0;}
}

int data;
int next;
int toExit = 0;

void title()
{
		while(1)
		{
				SSD1306_ClearBuffer();
				SSD1306_DrawBMP(15, 53, newtitle, 0, SSD1306_WHITE); // welcome screen!
			  SSD1306_DrawFastVLine(14, 2, 60, SSD1306_WHITE);
			  SSD1306_DrawFastVLine(110, 2, 60, SSD1306_WHITE);
				SSD1306_DrawString(3, 1, ((char *) "S"), SSD1306_WHITE);
				SSD1306_DrawString(3, 11, ((char *) "A"), SSD1306_WHITE);
				SSD1306_DrawString(3, 21, ((char *) "N"), SSD1306_WHITE);
				SSD1306_DrawString(3, 31, ((char *) "J"), SSD1306_WHITE);
				SSD1306_DrawString(3, 41, ((char *) "A"), SSD1306_WHITE);
				SSD1306_DrawString(3, 51, ((char *) "Y"), SSD1306_WHITE);
				SSD1306_DrawString(118, 1, ((char *) "K"), SSD1306_WHITE);
				SSD1306_DrawString(118, 11, ((char *) "E"), SSD1306_WHITE);
				SSD1306_DrawString(118, 21, ((char *) "S"), SSD1306_WHITE);
				SSD1306_DrawString(118, 31, ((char *) "H"), SSD1306_WHITE);
				SSD1306_DrawString(118, 41, ((char *) "A"), SSD1306_WHITE);
				SSD1306_DrawString(118, 51, ((char *) "V"), SSD1306_WHITE);
				SSD1306_OutBuffer();
				for(int i = 0; i < (80000 * 200); i++) 
				{
					if((GPIO_PORTE_DATA_R & 0x07) != 0) 
					{
						toExit = 1;
						break;
					}
				}
				if(toExit == 1) {break;}
				SSD1306_ClearBuffer();
				SSD1306_OutClear();
				SSD1306_SetCursor(3, 3);
				SSD1306_OutString((char *) "Press any button"); 
				SSD1306_SetCursor(5, 5);
				SSD1306_OutString((char *) "to continue"); 
				for(int i = 0; i < (80000 * 75); i++) 
				{
					if((GPIO_PORTE_DATA_R & 0x07) != 0) 
					{
						toExit = 1;
						break;
					}
				}
				if(toExit == 1) {break;}
		}

		for(int i = 0; i < (80000 * 30); i++) {}
		SSD1306_OutClear();
		SSD1306_ClearBuffer();
}

void chooseLang()
{
		while(1)
		{
				SSD1306_ClearBuffer();
				//SSD1306_DrawBMP(0, 64, final, 0, SSD1306_WHITE); // choose preferred language!
				SSD1306_DrawString(40, 5, ((char *) "Choose Your"), SSD1306_WHITE);
				SSD1306_DrawString(15, 20, ((char *) "Preferred Language"), SSD1306_WHITE);
				SSD1306_DrawFastHLine(4, 38, 55, SSD1306_WHITE);
				SSD1306_DrawFastVLine(4, 38, 21, SSD1306_WHITE);
				SSD1306_DrawFastHLine(4, 59, 55, SSD1306_WHITE);
				SSD1306_DrawFastVLine(59, 38, 21, SSD1306_WHITE);
				SSD1306_DrawFastHLine(68, 38, 55, SSD1306_WHITE);
				SSD1306_DrawFastVLine(68, 38, 21, SSD1306_WHITE);
				SSD1306_DrawFastHLine(68, 59, 55, SSD1306_WHITE);
				SSD1306_DrawFastVLine(123, 38, 21, SSD1306_WHITE);
				SSD1306_DrawString(12, 45, ((char *) "English"), SSD1306_WHITE);
				SSD1306_DrawString(76, 45, ((char *) "French"), SSD1306_WHITE);
				SSD1306_OutBuffer();
				if((GPIO_PORTE_DATA_R & 0x01) != 0) {break;}
				if((GPIO_PORTE_DATA_R & 0x04) != 0) {lang = 1; break;}
		}
		
		for(int i = 0; i < (80000 * 20); i++) {}
		SSD1306_OutClear();
		SSD1306_ClearBuffer();	
}

void chooseChar()
{
		while(1)
		{
				//if(lang == 0) SSD1306_DrawBMP(8, 64, supermario, 0, SSD1306_WHITE); // choose character in english
				//if(lang == 1) SSD1306_DrawBMP(8, 64, frenchar, 0, SSD1306_WHITE); // choose character in french
				if(lang == 0) SSD1306_DrawString(1, 5, ((char *) "Choose Your Character"), SSD1306_WHITE);
				if(lang == 1) SSD1306_DrawString(1, 5, ((char *) "Choisir Le Personnage"), SSD1306_WHITE);
				//SSD1306_DrawString(15, 20, ((char *) "Character"), SSD1306_WHITE);
				SSD1306_DrawFastHLine(1, 18, 36, SSD1306_WHITE);
				SSD1306_DrawFastVLine(1, 18, 40, SSD1306_WHITE);
				SSD1306_DrawFastHLine(1, 58, 36, SSD1306_WHITE);
				SSD1306_DrawFastVLine(37, 18, 40, SSD1306_WHITE);
				SSD1306_DrawFastHLine(45, 18, 36, SSD1306_WHITE);
				SSD1306_DrawFastVLine(45, 18, 40, SSD1306_WHITE);
				SSD1306_DrawFastHLine(45, 58, 36, SSD1306_WHITE);
				SSD1306_DrawFastVLine(81, 18, 40, SSD1306_WHITE);
				SSD1306_DrawFastHLine(87, 18, 36, SSD1306_WHITE);
				SSD1306_DrawFastVLine(87, 18, 40, SSD1306_WHITE);
				SSD1306_DrawFastHLine(87, 58, 36, SSD1306_WHITE);
				SSD1306_DrawFastVLine(123, 18, 40, SSD1306_WHITE);
				SSD1306_DrawBMP(10, 50, mario.image, 0, SSD1306_WHITE);
				SSD1306_DrawBMP(50, 50, luigi1.image, 0, SSD1306_WHITE);
				SSD1306_DrawBMP(95, 50, yoshi.image, 0, SSD1306_WHITE);
				SSD1306_OutBuffer();
				SSD1306_ClearBuffer();
				if((GPIO_PORTE_DATA_R & 0x01) != 0) {mario.alive = true; break;}
				else if((GPIO_PORTE_DATA_R & 0x02) != 0) {luigi1.alive = true; break;}
				else if((GPIO_PORTE_DATA_R & 0x04) != 0) {yoshi.alive = true; break;}
		}
		
		for(int i = 0; i < (80000 * 20); i++) {}
		SSD1306_OutClear();
		SSD1306_ClearBuffer();
}

void chooseLevel()
{
	while(1)
	{
			if(lang == 0) SSD1306_DrawString(27, 5, ((char *) "Choose a Level"), SSD1306_WHITE);
			if(lang == 1) SSD1306_DrawString(6, 5, ((char *) "Choisissez Un Niveau"), SSD1306_WHITE);
			SSD1306_DrawFastHLine(4, 30, 35, SSD1306_WHITE);
			SSD1306_DrawFastHLine(4, 58, 35, SSD1306_WHITE);
			SSD1306_DrawFastVLine(4, 30, 28, SSD1306_WHITE);
			SSD1306_DrawFastVLine(39, 30, 28, SSD1306_WHITE);
			SSD1306_DrawFastHLine(45, 30, 35, SSD1306_WHITE);
			SSD1306_DrawFastHLine(45, 58, 35, SSD1306_WHITE);
			SSD1306_DrawFastVLine(45, 30, 28, SSD1306_WHITE);
			SSD1306_DrawFastVLine(80, 30, 28, SSD1306_WHITE);
			SSD1306_DrawFastHLine(86, 30, 35, SSD1306_WHITE);
			SSD1306_DrawFastHLine(86, 58, 35, SSD1306_WHITE);
			SSD1306_DrawFastVLine(86, 30, 28, SSD1306_WHITE);
			SSD1306_DrawFastVLine(121, 30, 28, SSD1306_WHITE);
			SSD1306_DrawString(8, 42, ((char *) "Yerra"), SSD1306_WHITE);
			SSD1306_DrawString(53, 42, ((char *) "Valv"), SSD1306_WHITE);
			SSD1306_DrawString(92, 42, ((char *) "Glig"), SSD1306_WHITE);
			SSD1306_OutBuffer();
			SSD1306_ClearBuffer();
			if((GPIO_PORTE_DATA_R & 0x01) != 0) {break;}
			else if((GPIO_PORTE_DATA_R & 0x02) != 0) {level = 1; break;}
			else if((GPIO_PORTE_DATA_R & 0x04) != 0) {level = 2; break;}
	}
	
	for(int i = 0; i < (80000 * 20); i++) {}
	SSD1306_OutClear();
	SSD1306_ClearBuffer();
}

void charDisplay()
{
		if(mario.alive == true) {SSD1306_DrawBMP(mario.xpos, mario.ypos, mario.image, 0, SSD1306_WHITE);} // mario on screen!
		else if(luigi1.alive == true) {SSD1306_DrawBMP(luigi1.xpos, luigi1.ypos, luigi1.image, 0, SSD1306_WHITE);} // mario on screen!
		else if(yoshi.alive == true) {SSD1306_DrawBMP(yoshi.xpos, yoshi.ypos, yoshi.image, 0, SSD1306_WHITE);} // yoshi on screen!
		SSD1306_DrawFastHLine(0, 57, 127, SSD1306_WHITE);
		printLives();
		SSD1306_OutBuffer();
}

void start()
{
			SSD1306_OutClear();
			SSD1306_SetCursor(4, 3);
			if(lang == 0) SSD1306_OutString((char *) "Starting In...");
			if(lang == 1) SSD1306_OutString((char *) "A Partir De...");
			SSD1306_SetCursor(8, 5);
			SSD1306_OutUDec2(3);
			for(int i = 0; i < (80000 * 50); i++) {}
			SSD1306_OutClear();
			SSD1306_SetCursor(4, 3);
			if(lang == 0) SSD1306_OutString((char *) "Starting In...");
			if(lang == 1) SSD1306_OutString((char *) "A Partir De...");
			SSD1306_SetCursor(8, 5);
			SSD1306_OutUDec2(2);
			for(int i = 0; i < (80000 * 50); i++) {}
			SSD1306_OutClear();
			SSD1306_SetCursor(4, 3);
			if(lang == 0) SSD1306_OutString((char *) "Starting In...");
			if(lang == 1) SSD1306_OutString((char *) "A Partir De...");
			SSD1306_SetCursor(8, 5);
			SSD1306_OutUDec2(1);
			for(int i = 0; i < (80000 * 50); i++) {}	
}

void endScreen()
{
		if(lang == 0)
		{
			SSD1306_OutClear();
			SSD1306_ClearBuffer();	
			SSD1306_SetCursor(2, 1);
			SSD1306_OutString((char *) "Your Score is:"); // end screen, return to home.
			SSD1306_OutUDec16(score);
			SSD1306_SetCursor(0, 3);
			if(level == 0) {SSD1306_OutString((char *) "Reaction Time: Bad");}
			if(level == 1) {SSD1306_OutString((char *) "Reaction Time: Ok");}
			if(level == 2 && score < 100) {SSD1306_OutString((char *) "Reaction Time: Ok");}
			if(level == 2 && score >= 100 && score < 200) {SSD1306_OutString((char *) "Reaction Time: Good");}
			if(level == 2 && score >= 200) {SSD1306_OutString((char *) "Reaction Time: Good");}
			SSD1306_SetCursor(2, 5);
			SSD1306_OutString((char *) "Press any Button");
			SSD1306_SetCursor(3, 6);
			SSD1306_OutString((char *) "to play again!");		
		}
	
		else if(lang == 1)
		{
			SSD1306_OutClear();
			SSD1306_ClearBuffer();	
			SSD1306_SetCursor(2, 1);
			SSD1306_OutString((char *) "Ton score est:"); // end screen, return to home.
			SSD1306_OutUDec16(score);
			SSD1306_SetCursor(0, 3);
			if(level == 0) {SSD1306_OutString((char *) "Temps Reaction: Mal");}
			if(level == 1) {SSD1306_OutString((char *) "Temps Reaction: Hein");}	
			if(level == 2 && score < 100) {SSD1306_OutString((char *) "Temps Reaction: Hein");}
			if(level == 2 && score >= 100 && score < 200) {SSD1306_OutString((char *) "Temps Reaction: Bien");}
			if(level == 2 && score >= 200) {SSD1306_OutString((char *) "Temps Reaction: Bien");}
			SSD1306_SetCursor(0, 5);
			SSD1306_OutString((char *) "Appuyer sur un bouton");
			SSD1306_SetCursor(2, 6);
			SSD1306_OutString((char *) "pour recommencer!");
		}
}

void resetGame()
{
		while((GPIO_PORTE_DATA_R & 0x07) == 0) {} ;
		for(int start = 0; start < (80000 * 40); start++) {}
		SSD1306_ClearBuffer();
		SSD1306_OutClear();
		toExit = 0;
		score = 0;
		lang = 0;
		level = 0;
		sub = 2;
		mario.alive = false;
		luigi1.alive = false;
		yoshi.alive = false;
		lifeDone = false;
}

int main(void)
{
	//data = 0;
	//uint32_t time=0;
  DisableInterrupts();
  // pick one of the following three lines, all three set to 80 MHz
  //PLL_Init();                   // 1) call to have no TExaS debugging
  TExaS_Init(&LogicAnalyzerTask); // 2) call to activate logic analyzer
  //TExaS_Init(&ScopeTask);       // or 3) call to activate analog scope PD2
  SSD1306_Init(SSD1306_SWITCHCAPVCC);
  SSD1306_OutClear(); 
	SysTick_Init(8000000/10);
  Random_Init(1);
	ADC_Init();
	Sound_Init();
  Profile_Init(); // PB5,PB4,PF3,PF2,PF1 
	EdgeCounter_Init();
	EnableInterrupts();
	
	SYSCTL_RCGCGPIO_R |= 0x10;
	while((SYSCTL_PRGPIO_R&0x10) != 0x10){};
		
	GPIO_PORTE_DIR_R &= ~0x07;  // input on PE2-PE0
	GPIO_PORTE_DEN_R |= 0x07;    // enable digital I/O on PE2-PE0
	
	while(1)
	{
		Lives = 5;
		title();
		chooseLang();
		chooseChar();
		chooseLevel();
		start();
		charDisplay();
		ready = 1;
		while(ready == 1) {}
		endScreen();
		resetGame();
	}
}

// You can't use this timer, it is here for starter code only 
// you must use interrupts to perform delays
void Delay100ms(uint32_t count){uint32_t volatile time;
  while(count>0){
    time = 727240;  // 0.1sec at 80 MHz
    while(time){
      time--;
    }
    count--;
  }
}






